{"version":3,"sources":["components/Item/Item.tsx","utils.ts","components/Pagination/Pagination.tsx","App.tsx","index.tsx"],"names":["Item","item","getNumbers","from","to","numbers","n","push","Pagination","total","perPage","currentPage","onPageChange","pagesCount","Math","ceil","pages","handlePageChange","page","className","cn","disabled","href","onClick","map","active","items","perPageOptions","App","useState","setPerPage","setCurrentPage","displayedItems","allItems","startIndex","endIndex","slice","getDisplayedItems","length","firstDisplayed","lastDisplayed","id","defaultValue","onChange","e","target","value","option","htmlFor","ReactDOM","render","document","getElementById"],"mappings":"yMAIaA,EAAwB,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OACnC,oBAAI,UAAQ,OAAZ,SAAoBA,K,gBCLf,SAASC,EAAWC,EAAcC,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAIH,EAAMG,GAAKF,EAAIE,GAAK,EAC/BD,EAAQE,KAAKD,GAGf,OAAOD,ECIF,IAAMG,EAA8B,SAAC,GAKrC,IAJLC,EAII,EAJJA,MACAC,EAGI,EAHJA,QACAC,EAEI,EAFJA,YACAC,EACI,EADJA,aAEMC,EAAaC,KAAKC,KAAKN,EAAQC,GAC/BM,EAAQd,EAAW,EAAGW,GAEtBI,EAAmB,SAACC,GACpBA,IAASP,GAAeO,GAAQ,GAAKA,GAAQL,GAC/CD,EAAaM,IAIjB,OACE,qBAAIC,UAAU,aAAd,UACE,oBACEA,UAAWC,IAAG,YAAa,CACzBC,SAA0B,IAAhBV,IAFd,SAKE,mBACE,UAAQ,WACRQ,UAAU,YACVG,KAAK,QACL,gBAA+B,IAAhBX,EACfY,QAAS,WACPN,EAAiBN,EAAc,IANnC,oBAaDK,EAAMQ,KAAI,SAAAN,GAAI,OACb,oBACEC,UAAWC,IAAG,YAAa,CACzBK,OAAQP,IAASP,IAFrB,SAME,mBACE,UAAQ,WACRQ,UAAU,YACVG,KAAI,WAAMJ,GACVK,QAAS,WACPN,EAAiBC,IALrB,SAQGA,KAVEA,MAeT,oBACEC,UAAWC,IAAG,YAAa,CACzBC,SAAUV,IAAgBE,IAF9B,SAKE,mBACE,UAAQ,WACRM,UAAU,YACVG,KAAK,QACL,gBAAeX,IAAgBE,EAC/BU,QAAS,WACPN,EAAiBN,EAAc,IANnC,wBCjEFe,EAAQxB,EAAW,EAAG,IACzBsB,KAAI,SAAAlB,GAAC,qBAAYA,MAEdqB,EAA2B,CAAC,EAAG,EAAG,GAAI,IAarC,IAAMC,EAAgB,WAC3B,MAA8BC,mBAAS,GAAvC,mBAAOnB,EAAP,KAAgBoB,EAAhB,KACA,EAAsCD,mBAAS,GAA/C,mBAAOlB,EAAP,KAAoBoB,EAApB,KAEMC,EAfR,SACEC,EACAvB,EACAC,GAEA,IAAMuB,EAAaxB,EAAUC,EAAcD,EACrCyB,EAAWzB,EAAUC,EAE3B,OAAO,YAAIsB,GAAUG,MAAMF,EAAYC,GAOhBE,CAAkBX,EAAOhB,EAASC,GAEnDF,EAAQiB,EAAMY,OACdC,GAAkB5B,EAAc,GAAKD,EAAU,EAC/C8B,EAAgB7B,EAAcD,EAAUD,EAC1CA,EACAE,EAAcD,EAWlB,OACE,sBAAKS,UAAU,YAAf,UACE,uDAEA,mBAAGA,UAAU,OAAO,UAAQ,OAA5B,wBACWR,EADX,mBACiC4B,EADjC,cACqDC,EADrD,eACyE/B,EADzE,OAIA,sBAAKU,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,wBACE,UAAQ,kBACRsB,GAAG,kBACHtB,UAAU,eACVuB,aAAa,IACbC,SAxBV,SAA4BC,GAC1Bd,GAAYc,EAAEC,OAAOC,OACrBf,EAAe,IAiBT,SAOGJ,EAAeH,KAAI,SAAAuB,GAAM,OACxB,wBAAQD,MAAOC,EAAf,SAAqCA,GAATA,UAKlC,uBAAOC,QAAQ,kBAAkB7B,UAAU,qBAA3C,+BAKF,cAAC,EAAD,CACEV,MAAOA,EACPC,QAASA,EACTC,YAAaA,EAEbC,aArCN,SAAoBM,GAClBa,EAAeb,MAuCb,6BACGc,EAAeR,KAAI,SAAAvB,GAAI,OACtB,cAAC,EAAD,CAAMA,KAAMA,GAAWA,YC9EjCgD,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.d020eba1.chunk.js","sourcesContent":["type Props = {\n  item: string;\n};\n\nexport const Item: React.FC<Props> = ({ item }) => (\n  <li data-cy=\"item\">{item}</li>\n);\n","export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import cn from 'classnames';\nimport React from 'react';\nimport { getNumbers } from '../../utils';\n\ntype Props = {\n  total: number;\n  perPage: number;\n  currentPage: number;\n  onPageChange: (page: number) => void;\n};\n\nexport const Pagination: React.FC<Props> = ({\n  total,\n  perPage,\n  currentPage,\n  onPageChange,\n}) => {\n  const pagesCount = Math.ceil(total / perPage);\n  const pages = getNumbers(1, pagesCount);\n\n  const handlePageChange = (page: number) => {\n    if (page !== currentPage && page >= 1 && page <= pagesCount) {\n      onPageChange(page);\n    }\n  };\n\n  return (\n    <ul className=\"pagination\">\n      <li\n        className={cn('page-item', {\n          disabled: currentPage === 1,\n        })}\n      >\n        <a\n          data-cy=\"prevLink\"\n          className=\"page-link\"\n          href=\"#prev\"\n          aria-disabled={currentPage === 1}\n          onClick={() => {\n            handlePageChange(currentPage - 1);\n          }}\n        >\n          «\n        </a>\n      </li>\n\n      {pages.map(page => (\n        <li\n          className={cn('page-item', {\n            active: page === currentPage,\n          })}\n          key={page}\n        >\n          <a\n            data-cy=\"pageLink\"\n            className=\"page-link\"\n            href={`#${page}`}\n            onClick={() => {\n              handlePageChange(page);\n            }}\n          >\n            {page}\n          </a>\n        </li>\n      ))}\n\n      <li\n        className={cn('page-item', {\n          disabled: currentPage === pagesCount,\n        })}\n      >\n        <a\n          data-cy=\"nextLink\"\n          className=\"page-link\"\n          href=\"#next\"\n          aria-disabled={currentPage === pagesCount}\n          onClick={() => {\n            handlePageChange(currentPage + 1);\n          }}\n        >\n          »\n        </a>\n      </li>\n    </ul>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.css';\nimport { Item } from './components/Item';\nimport { Pagination } from './components/Pagination';\nimport { getNumbers } from './utils';\n\nconst items = getNumbers(1, 42)\n  .map(n => `Item ${n}`);\n\nconst perPageOptions: number[] = [3, 5, 10, 20];\n\nfunction getDisplayedItems(\n  allItems: string[],\n  perPage: number,\n  currentPage: number,\n) {\n  const startIndex = perPage * currentPage - perPage;\n  const endIndex = perPage * currentPage;\n\n  return [...allItems].slice(startIndex, endIndex);\n}\n\nexport const App: React.FC = () => {\n  const [perPage, setPerPage] = useState(5);\n  const [currentPage, setCurrentPage] = useState(1);\n\n  const displayedItems = getDisplayedItems(items, perPage, currentPage);\n\n  const total = items.length;\n  const firstDisplayed = (currentPage - 1) * perPage + 1;\n  const lastDisplayed = currentPage * perPage > total\n    ? total\n    : currentPage * perPage;\n\n  function handleOptionChange(e: React.ChangeEvent<HTMLSelectElement>) {\n    setPerPage(+e.target.value);\n    setCurrentPage(1);\n  }\n\n  function changePage(page: number) {\n    setCurrentPage(page);\n  }\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${currentPage} (items ${firstDisplayed} - ${lastDisplayed} of ${total})`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            defaultValue=\"5\"\n            onChange={handleOptionChange}\n          >\n            {perPageOptions.map(option => (\n              <option value={option} key={option}>{option}</option>\n            ))}\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        total={total}\n        perPage={perPage}\n        currentPage={currentPage}\n        // eslint-disable-next-line react/jsx-no-bind\n        onPageChange={changePage}\n      />\n\n      <ul>\n        {displayedItems.map(item => (\n          <Item item={item} key={item} />\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}